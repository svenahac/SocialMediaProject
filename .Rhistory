theme_minimal()
usage_by_gender <- df %>%
group_by(Gender) %>%
summarize(Total_Daily_Usage_Time = sum(Daily_Usage_Time..minutes.))
# Create the bar plot
ggplot(data = usage_by_gender, aes(x = Gender, y = Total_Daily_Usage_Time, fill = Gender)) +
geom_bar() +
labs(title = "Total Daily Social Media Usage Time by Gender",
x = "Gender",
y = "Total Daily Usage Time (minutes)") +
theme_minimal()
usage_by_gender <- df %>%
group_by(Gender) %>%
summarize(Total_Daily_Usage_Time = sum(Daily_Usage_Time..minutes.))
# Create the bar plot
ggplot(data = usage_by_gender, aes(x = Gender, y = Total_Daily_Usage_Time, fill = Gender)) +
geom_bar(stat = "identity") +
labs(title = "Total Daily Social Media Usage Time by Gender",
x = "Gender",
y = "Total Daily Usage Time (minutes)") +
theme_minimal()
usage_by_gender <- df %>%
group_by(Gender) %>%
summarize(Total_Daily_Usage_Time = sum(Daily_Usage_Time..minutes.))
# Create the bar plot
ggplot(data = usage_by_gender, aes(x = Gender, y = Total_Daily_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
labs(title = "Total Daily Social Media Usage Time by Gender",
x = "Gender",
y = "Total Daily Usage Time (minutes)") +
theme_minimal()
usage_by_gender <- df %>%
group_by(Gender) %>%
summarize(Total_Daily_Usage_Time = sum(Daily_Usage_Time..minutes.))
# Create the bar plot
ggplot(data = usage_by_gender, aes(x = Gender, y = Total_Daily_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
labs(
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
usage_by_gender <- df %>%
group_by(Gender) %>%
summarize(Total_Daily_Usage_Time = sum(Daily_Usage_Time..minutes.))
# Create the bar plot
ggplot(data = usage_by_gender, aes(x = Gender, y = Total_Daily_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste("Count:", stat(count))), vjust = -0.5, color = "black", size = 3) +
labs(
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
rm(usage_by_gender)
gender_summary <- data %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
gender_summary <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
# Create the plot
ggplot(gender_summary, aes(x = Gender, y = Total_Usage_Time, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title = "Total Daily Usage Time by Gender with Count of Each Gender",
x = "Gender",
y = "Total Daily Usage Time (minutes)") +
theme_minimal()
gender_summary <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(gender_summary, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(x = "Gender", y = "Total Daily Usage Time (hours)") +
theme_minimal()
gender_summary <- df %>%
group_by(Gender) %>%
summarise(
Average_Usage_Time = mean(Daily_Usage_Time..minutes.),
Count = n()
)
# Create the plot
ggplot(gender_summary, aes(x = Gender, y = Average_Usage_Time, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0("n=", Count)), vjust = -0.5) +
labs(title = "Average Daily Usage Time by Gender with Count of Each Gender",
x = "Gender",
y = "Average Daily Usage Time (minutes)") +
theme_minimal()
rm(gender_summary)
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count)) +
labs(x = "Gender", y = "Total Daily Usage Time (hours)") +
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(x = "Gender", y = "Total Daily Usage Time (hours)") +
theme_minimal()
df %>% filter(Posts_Per_Day == 0)
ggplot(data_filtered, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(title = "Growth of Likes by Posts",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(title = "Growth of Likes by Posts",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_line(alpha = 0.5) +
labs(title = "Growth of Likes by Posts",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Growth of Likes by Posts",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(aes(colour = Gender),size=2,shape=1) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Growth of Likes by Posts",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
theme_update(plot.title = element_text(hjust = 0.5))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
theme_update(plot.title = element_text(hjust = 0.5))+
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
ggtitle("forsen") +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal(plot.title = element_text(hjust = 0.5))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal()
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = white)
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#BFD5E3", colour = "#6D9EC1",
size = 2, linetype = "solid"))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#FFFFFF", colour = "#6D9EC1", size = 2, linetype = "solid"))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#FFFFFF", size = 2, linetype = "solid"))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#FFFFFF"))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -1.5) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#FFFFFF"))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.2) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme(plot.title = element_text(hjust = 0.5), panel.background = element_rect(fill = "#FFFFFF"))
emotion_summary <- df %>%
group_by(Platform, Dominant_Emotion) %>%
summarise(Count = n()) %>%
ungroup() %>%
group_by(Platform) %>%
mutate(Proportion = Count / sum(Count))
ggplot(emotion_summary, aes(x = Platform, y = Proportion, fill = Dominant_Emotion)) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Dominant Emotions Across Different Platforms",
x = "Platform",
y = "Proportion of Users",
fill = "Dominant Emotion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
emotion_summary <- df %>%
group_by(Platform, Dominant_Emotion) %>%
summarise(Count = n()) %>%
ungroup() %>%
group_by(Platform) %>%
mutate(Proportion = Count / sum(Count))
ggplot(emotion_summary, aes(x = Platform, y = Proportion, fill = Dominant_Emotion)) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Dominant emotions across platforms",
x = "Platform",
y = "Proportion of Users",
fill = "Dominant Emotion") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(aes(colour = Gender),size=2,shape=1) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Correlation between posts and likes per day",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(aes(colour = Gender),size=2,shape=1) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Correlation between posts and likes per day",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal() +
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(aes(colour = Gender),size=2,shape=1) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Correlation between posts and likes per day",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal()
ggplot(df, aes(x = Posts_Per_Day, y = Likes_Received_Per_Day)) +
geom_point(aes(colour = Gender),size=2,shape=1) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Correlation between posts and likes per day",
x = "Posts Per Day",
y = "Likes Received Per Day") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sum_by_gender <- df %>%
group_by(Gender) %>%
summarise(
Total_Usage_Time = sum(Daily_Usage_Time..minutes.),
Count = n()
)
ggplot(sum_by_gender, aes(x = Gender, y = Total_Usage_Time/60, fill = Gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Count), vjust = -0.2) +
labs(title="Total daily usage by gender",
x = "Gender",
y = "Total Daily Usage Time (hours)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
emotion_summary <- df %>%
group_by(Platform, Dominant_Emotion) %>%
summarise(Count = n()) %>%
ungroup() %>%
group_by(Platform) %>%
mutate(Proportion = Count / sum(Count))
ggplot(emotion_summary, aes(x = Platform, y = Proportion, fill = Dominant_Emotion)) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Dominant emotions across platforms",
x = "Platform",
y = "Percentage of users",
fill = "Dominant Emotion") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
emotion_age_summary <- df %>%
group_by(Gender, Dominant_Emotion) %>%
summarise(Average_Age = mean(Age, na.rm = TRUE)) %>%
ungroup()
# Create the line plot
ggplot(emotion_age_summary, aes(x = Dominant_Emotion, y = Average_Age, group = Gender, color = Gender)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(title = "Average Age by Dominant Emotion and Gender",
x = "Dominant Emotion",
y = "Average Age",
color = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
emotion_age_summary <- df %>%
group_by(Gender, Dominant_Emotion) %>%
summarise(Average_Age = mean(Age)) %>%
ungroup()
ggplot(emotion_age_summary, aes(x = Dominant_Emotion, y = Average_Age, group = Gender, color = Gender)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(title = "Average Age by Dominant Emotion and Gender",
x = "Dominant Emotion",
y = "Average Age",
color = "Gender") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df %>% group_by(Age) %>%
summarise(Average_Usage = round(mean(Daily_Usage_Time..minutes.))) %>%
arrange(-Average_Usage) %>%
knitr::kable()
rm(emotion_age_summary)
rm(emotion_summary)
messages_sent_by_emotion <- df %>%
group_by(Dominant_Emotion) %>%
summarize(Total_Messages_Sent = sum(Messages_Sent_Per_Day, na.rm = TRUE))
rm(messages_sent_by_emotion)
df %>%
group_by(Dominant_Emotion) %>%
summarize(Total_Messages_Sent = sum(Messages_Sent_Per_Day, na.rm = TRUE))
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent_Per_User = sum(Messages_Sent_Per_Day) / n_distinct(User_ID, na.rm = TRUE))
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent_Per_User = sum(Messages_Sent_Per_Day) / n_distinct(User_ID)) %>%
knitr::kable()
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent_Per_User = round(sum(Messages_Sent_Per_Day) / n_distinct(User_ID)),1) %>%
knitr::kable()
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent = round(sum(Messages_Sent_Per_Day) / n_distinct(User_ID)),1) %>%
knitr::kable()
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent = round(sum(Messages_Sent_Per_Day) / n_distinct(User_ID)),1) %>%
knitr::kable()
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent = round(sum(Messages_Sent_Per_Day) / n_distinct(User_ID),1)) %>%
knitr::kable()
df %>%
group_by(Dominant_Emotion) %>%
summarize(Avg_Messages_Sent = round(sum(Messages_Sent_Per_Day) / n_distinct(User_ID),1)) %>%
arrange(-Avg_Messages_Sent) %>%
knitr::kable()
